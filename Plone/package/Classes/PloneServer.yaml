#  Licensed under the Apache License, Version 2.0 (the "License"); you may
#  not use this file except in compliance with the License. You may obtain
#  a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.

Namespaces:
  =: org.openstack.apps.plone
  std: io.murano
  res: io.murano.resources
  sys: io.murano.system

Name: PloneServer

Extends: std:Application

Properties:
  instance:
    Contract: $.class(res:Instance).notNull()
  pathname:
    Contract: $.string()
  password:
    Contract: $.string()
  port:
    Contract: $.string()

Methods:
  .init:
    Body:
      - $._environment: $.find(std:Environment).require()

  deploy:
    Body:
      - If: not $.getAttr(deployed, false)
        Then:
          - $._environment.reporter.report($this, 'Creating VM for Plone Server.')
          - $securityGroupIngress:
            - ToPort: 80
              FromPort: 80
              IpProtocol: tcp
              External: true
            - ToPort: 443
              FromPort: 443
              IpProtocol: tcp
              External: true
            - ToPort: $.port
              FromPort: $.port
              IpProtocol: tcp
              External: true
          - $._environment.securityGroupManager.addGroupIngress($securityGroupIngress)
          - $.instance.deploy()
          - $resources: new(sys:Resources)
          - $template: $resources.yaml('DeployPloneServer.template').bind(dict(
                pathname => $.pathname,
                password => $.password,
                port => $.port
              ))
          - $._environment.reporter.report($this, 'Instance is created. Deploying Plone')
          - $.instance.agent.call($template, $resources)
          - $._environment.reporter.report($this, 'Plone Server is installed.')
          - If: $.instance.assignFloatingIp
            Then:
              - $host: $.instance.floatingIpAddress
            Else:
              - $host: $.instance.ipAddresses.first()
          - $._environment.reporter.report($this, format('Plone Server is available at http://{0}:{1}', $host, $.port))
          - $.setAttr(deployed, true)
